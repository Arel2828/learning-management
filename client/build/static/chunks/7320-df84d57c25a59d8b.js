"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7320],{65724:(e,r,s)=>{s.d(r,{Z:()=>c});var t=s(57437),a=s(49354),o=s(66648);s(2265);let c=e=>{var r;let{course:s,isSelected:c,onClick:n}=e;return(0,t.jsxs)("div",{onClick:n,className:"course-card-search group ".concat(c?"course-car-search--selected":"course-card-search-unselected"),children:[(0,t.jsx)("div",{className:"course-card-search__image-container",children:(0,t.jsx)(o.default,{src:s.image||"/placeholder.png",alt:s.title,fill:!0,sizes:"(max=width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw",className:"course-card-search__image"})}),(0,t.jsxs)("div",{className:"course-card-search__content",children:[(0,t.jsxs)("div",{children:[(0,t.jsx)("h2",{className:"course-card-search__title",children:s.title}),(0,t.jsx)("p",{className:"course-card-search__description",children:s.description})]}),(0,t.jsxs)("div",{className:"mt-2",children:[(0,t.jsxs)("p",{className:"course-card-search_teacher",children:["By ",s.teacherName]}),(0,t.jsxs)("div",{className:"course-card-search__footer",children:[(0,t.jsx)("span",{className:"course-card-search__price",children:(0,a.T4)(s.price)}),(0,t.jsxs)("span",{className:"course-card-search__enrollment",children:[null===(r=s.enrollments)||void 0===r?void 0:r.length," Enrolled"]})]})]})]})]})}},49354:(e,r,s)=>{s.d(r,{E3:()=>d,G_:()=>l,QG:()=>i,T4:()=>u,cn:()=>n,kg:()=>p});var t=s(44839),a=s(96164),o=s(59772),c=s(27776);function n(){for(var e=arguments.length,r=Array(e),s=0;s<e;s++)r[s]=arguments[s];return(0,a.m6)((0,t.W)(r))}function u(e){return new Intl.NumberFormat("en-US",{style:"currency",currency:"USD"}).format((e||0)/100)}function l(e){return((e||0)/100).toString()}o.Z_().transform(e=>{let r=parseFloat(e);return isNaN(r)?"0":(function(e){return Math.round(100*("string"==typeof e?parseFloat(e):e))})(r).toString()});let i=[{value:"N-5",label:"N-5"},{value:"N-4",label:"N-4"},{value:"N-3",label:"N-3"},{value:"N-2",label:"N-2"}],d=(e,r)=>{let s=new FormData;s.append("title",e.courseTitle),s.append("description",e.courseDescription),s.append("category",e.courseCategory),s.append("price",e.coursePrice.toString()),s.append("status",e.courseStatus?"Published":"Draft");let t=r.map(e=>({...e,chapters:e.chapters.map(e=>({...e,video:e.video}))}));return s.append("sections",JSON.stringify(t)),s},p=async(e,r,s)=>{let t=e.map(e=>({...e,chapters:e.chapters.map(e=>({...e}))}));for(let e=0;e<t.length;e++)for(let a=0;a<t[e].chapters.length;a++){let o=t[e].chapters[a];if(o.video instanceof File&&"video/mp4"===o.video.type)try{let c=await h(o,r,t[e].sectionId,s);t[e].chapters[a]=c}catch(e){console.error("Failed to upload video for chapter ".concat(o.chapterId,":"),e)}}return t};async function h(e,r,s,t){let a=e.video;try{let{uploadUrl:o,videoUrl:n}=await t({courseId:r,sectionId:s,chapterId:e.chapterId,fileName:a.name,fileType:a.type}).unwrap();return await fetch(o,{method:"PUT",headers:{"Content-Type":a.type},body:a}),c.A.success("Video uploaded successfully for chapter ".concat(e.chapterId)),{...e,video:n}}catch(r){throw console.error("Failed to upload video for chapter ".concat(e.chapterId,":"),r),r}}},51994:(e,r,s)=>{s.d(r,{Bi:()=>f,Dx:()=>v,Ie:()=>T,Ky:()=>h,NG:()=>C,PW:()=>p,S5:()=>g,_c:()=>l,a_:()=>d,hi:()=>n,iL:()=>m,kD:()=>u,mG:()=>i,ym:()=>y});var t=s(36074),a=s(8507),o=s(27776);let c=async(e,r,s)=>{let a=(0,t.ni)({baseUrl:"http://localhost:8001",prepareHeaders:async e=>{var r,s;let t=await (null===(s=window.Clerk)||void 0===s?void 0:null===(r=s.session)||void 0===r?void 0:r.getToken());return t&&e.set("Authorization","Bearer ".concat(t)),e}});try{var c,n,u,l;let t=await a(e,r,s);if(t.error){let e=t.error.data,r=(null==e?void 0:e.message)||t.error.status.toString()||"An error occurred";o.A.error("Error: ".concat(r))}if(e.method&&"GET"!==e.method){let e=null===(l=t.data)||void 0===l?void 0:l.message;e&&o.A.success(e)}if(t.data)t.data=t.data.data;else if((null===(c=t.error)||void 0===c?void 0:c.status)===204||(null===(u=t.meta)||void 0===u?void 0:null===(n=u.response)||void 0===n?void 0:n.status)===24)return{data:null};return t}catch(e){return{error:{status:"FETCH_ERROR",error:e instanceof Error?e.message:"Unknown error"}}}},n=(0,a.LC)({baseQuery:c,reducerPath:"api",tagTypes:["Courses","Users","UserCourseProgress"],endpoints:e=>({updateUser:e.mutation({query:e=>{let{userId:r,...s}=e;return{url:"users/clerk/".concat(r),method:"PUT",body:s}},invalidatesTags:["Users"]}),getCourses:e.query({query:e=>{let{category:r}=e;return{url:"courses",params:{category:r}}},providesTags:["Courses"]}),getCourse:e.query({query:e=>"courses/".concat(e),providesTags:(e,r,s)=>[{type:"Courses",id:s}]}),createCourse:e.mutation({query:e=>({url:"courses",method:"POST",body:e}),invalidatesTags:["Courses"]}),updateCourse:e.mutation({query:e=>{let{courseId:r,formData:s}=e;return{url:"courses/".concat(r),method:"PUT",body:s}},invalidatesTags:(e,r,s)=>{let{courseId:t}=s;return[{type:"Courses",id:t}]}}),deleteCourse:e.mutation({query:e=>({url:"courses/".concat(e),method:"DELETE"}),invalidatesTags:["Courses"]}),getUploadVideoUrl:e.mutation({query:e=>{let{courseId:r,sectionId:s,chapterId:t,fileName:a,fileType:o}=e;return{url:"courses/".concat(r,"/sections/").concat(s,"/chapters/").concat(t,"/get-upload-url"),method:"POST",body:{fileName:a,fileType:o}}}}),getTransactions:e.query({query:e=>"transactions?userId=".concat(e)}),createStripePaymentIntent:e.mutation({query:e=>{let{amount:r}=e;return{url:"/transactions/stripe/payment-intent",method:"POST",body:{amount:r}}}}),createTransaction:e.mutation({query:e=>({url:"transactions",method:"POST",body:e})}),getUserEnrolledCourses:e.query({query:e=>"users/course-progress/".concat(e,"/enrolled-courses"),providesTags:["Courses","UserCourseProgress"]}),getUserCourseProgress:e.query({query:e=>{let{userId:r,courseId:s}=e;return"users/course-progress/".concat(r,"/courses/").concat(s)},providesTags:["UserCourseProgress"]}),updateUserCourseProgress:e.mutation({query:e=>{let{userId:r,courseId:s,progressData:t}=e;return{url:"users/course-progress/".concat(r,"/courses/").concat(s),method:"PUT",body:t}},invalidatesTags:["UserCourseProgress"],async onQueryStarted(e,r){let{userId:s,courseId:t,progressData:a}=e,{dispatch:o,queryFulfilled:c}=r,u=o(n.util.updateQueryData("getUserCourseProgress",{userId:s,courseId:t},e=>{Object.assign(e,{...e,sections:a.sections})}));try{await c}catch(e){u.undo()}}})})}),{useUpdateUserMutation:u,useCreateCourseMutation:l,useUpdateCourseMutation:i,useDeleteCourseMutation:d,useGetCoursesQuery:p,useGetCourseQuery:h,useGetUploadVideoUrlMutation:m,useGetTransactionsQuery:y,useCreateTransactionMutation:v,useCreateStripePaymentIntentMutation:g,useGetUserEnrolledCoursesQuery:f,useGetUserCourseProgressQuery:T,useUpdateUserCourseProgressMutation:C}=n}}]);